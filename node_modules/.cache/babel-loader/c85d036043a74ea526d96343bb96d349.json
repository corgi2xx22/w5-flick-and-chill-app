{"ast":null,"code":"import axiosClient from\"./axiosClient\";export var category={movie:'movie',tv:'tv'};export var movieType={upcoming:'upcoming',popular:'popular',top_rated:'top_rated'};export var tvType={popular:'popular',top_rated:'top_rated',on_the_air:'on_the_air'};var tmdbApi={getMoviesList:function getMoviesList(type,params){var url='movie/'+movieType[type];return axiosClient.get(url,params);},getTvList:function getTvList(type,params){var url='tv/'+tvType[type];return axiosClient.get(url,params);},getVideos:function getVideos(cate,id){var url=category[cate]+'/'+id+'/videos';return axiosClient.get(url,{params:{}});},search:function search(cate,params){var url='search/'+category[cate];return axiosClient.get(url,params);},detail:function detail(cate,id,params){var url=category[cate]+'/'+id;return axiosClient.get(url,params);},credits:function credits(cate,id){var url=category[cate]+'/'+id+'/credits';return axiosClient.get(url,{params:{}});},similar:function similar(cate,id){var url=category[cate]+'/'+id+'/similar';return axiosClient.get(url,{params:{}});}};export default tmdbApi;","map":{"version":3,"sources":["/Users/hellentrinh/Desktop/flick-and-chill/src/api/tmdbApi.js"],"names":["axiosClient","category","movie","tv","movieType","upcoming","popular","top_rated","tvType","on_the_air","tmdbApi","getMoviesList","type","params","url","get","getTvList","getVideos","cate","id","search","detail","credits","similar"],"mappings":"AAAA,MAAOA,CAAAA,WAAP,KAAwB,eAAxB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,CACpBC,KAAK,CAAE,OADa,CAEpBC,EAAE,CAAE,IAFgB,CAAjB,CAKP,MAAO,IAAMC,CAAAA,SAAS,CAAG,CACrBC,QAAQ,CAAE,UADW,CAErBC,OAAO,CAAE,SAFY,CAGrBC,SAAS,CAAE,WAHU,CAAlB,CAMP,MAAO,IAAMC,CAAAA,MAAM,CAAG,CAClBF,OAAO,CAAE,SADS,CAElBC,SAAS,CAAE,WAFO,CAGlBE,UAAU,CAAE,YAHM,CAAf,CAMP,GAAMC,CAAAA,OAAO,CAAG,CACZC,aAAa,CAAE,uBAACC,IAAD,CAAOC,MAAP,CAAkB,CAC7B,GAAMC,CAAAA,GAAG,CAAG,SAAWV,SAAS,CAACQ,IAAD,CAAhC,CACA,MAAOZ,CAAAA,WAAW,CAACe,GAAZ,CAAgBD,GAAhB,CAAqBD,MAArB,CAAP,CACH,CAJW,CAKZG,SAAS,CAAE,mBAACJ,IAAD,CAAOC,MAAP,CAAkB,CACzB,GAAMC,CAAAA,GAAG,CAAG,MAAQN,MAAM,CAACI,IAAD,CAA1B,CACA,MAAOZ,CAAAA,WAAW,CAACe,GAAZ,CAAgBD,GAAhB,CAAqBD,MAArB,CAAP,CACH,CARW,CASZI,SAAS,CAAE,mBAACC,IAAD,CAAOC,EAAP,CAAc,CACrB,GAAML,CAAAA,GAAG,CAAGb,QAAQ,CAACiB,IAAD,CAAR,CAAiB,GAAjB,CAAuBC,EAAvB,CAA4B,SAAxC,CACA,MAAOnB,CAAAA,WAAW,CAACe,GAAZ,CAAgBD,GAAhB,CAAqB,CAACD,MAAM,CAAE,EAAT,CAArB,CAAP,CACH,CAZW,CAaZO,MAAM,CAAE,gBAACF,IAAD,CAAOL,MAAP,CAAkB,CACtB,GAAMC,CAAAA,GAAG,CAAG,UAAYb,QAAQ,CAACiB,IAAD,CAAhC,CACA,MAAOlB,CAAAA,WAAW,CAACe,GAAZ,CAAgBD,GAAhB,CAAqBD,MAArB,CAAP,CACH,CAhBW,CAiBZQ,MAAM,CAAE,gBAACH,IAAD,CAAOC,EAAP,CAAWN,MAAX,CAAsB,CAC1B,GAAMC,CAAAA,GAAG,CAAGb,QAAQ,CAACiB,IAAD,CAAR,CAAiB,GAAjB,CAAuBC,EAAnC,CACA,MAAOnB,CAAAA,WAAW,CAACe,GAAZ,CAAgBD,GAAhB,CAAqBD,MAArB,CAAP,CACH,CApBW,CAqBZS,OAAO,CAAE,iBAACJ,IAAD,CAAOC,EAAP,CAAc,CACnB,GAAML,CAAAA,GAAG,CAAGb,QAAQ,CAACiB,IAAD,CAAR,CAAiB,GAAjB,CAAuBC,EAAvB,CAA4B,UAAxC,CACA,MAAOnB,CAAAA,WAAW,CAACe,GAAZ,CAAgBD,GAAhB,CAAqB,CAACD,MAAM,CAAE,EAAT,CAArB,CAAP,CACH,CAxBW,CAyBZU,OAAO,CAAE,iBAACL,IAAD,CAAOC,EAAP,CAAc,CACnB,GAAML,CAAAA,GAAG,CAAGb,QAAQ,CAACiB,IAAD,CAAR,CAAiB,GAAjB,CAAuBC,EAAvB,CAA4B,UAAxC,CACA,MAAOnB,CAAAA,WAAW,CAACe,GAAZ,CAAgBD,GAAhB,CAAqB,CAACD,MAAM,CAAE,EAAT,CAArB,CAAP,CACH,CA5BW,CAAhB,CA+BA,cAAeH,CAAAA,OAAf","sourcesContent":["import axiosClient from \"./axiosClient\";\n\nexport const category = {\n    movie: 'movie',\n    tv: 'tv'\n}\n\nexport const movieType = {\n    upcoming: 'upcoming',\n    popular: 'popular',\n    top_rated: 'top_rated'\n}\n\nexport const tvType = {\n    popular: 'popular',\n    top_rated: 'top_rated',\n    on_the_air: 'on_the_air'\n}\n\nconst tmdbApi = {\n    getMoviesList: (type, params) => {\n        const url = 'movie/' + movieType[type];\n        return axiosClient.get(url, params);\n    },\n    getTvList: (type, params) => {\n        const url = 'tv/' + tvType[type];\n        return axiosClient.get(url, params);\n    },\n    getVideos: (cate, id) => {\n        const url = category[cate] + '/' + id + '/videos';\n        return axiosClient.get(url, {params: {}});\n    },\n    search: (cate, params) => {\n        const url = 'search/' + category[cate];\n        return axiosClient.get(url, params);\n    },\n    detail: (cate, id, params) => {\n        const url = category[cate] + '/' + id;\n        return axiosClient.get(url, params);\n    },\n    credits: (cate, id) => {\n        const url = category[cate] + '/' + id + '/credits';\n        return axiosClient.get(url, {params: {}});\n    },\n    similar: (cate, id) => {\n        const url = category[cate] + '/' + id + '/similar';\n        return axiosClient.get(url, {params: {}});\n    },\n}\n\nexport default tmdbApi;"]},"metadata":{},"sourceType":"module"}
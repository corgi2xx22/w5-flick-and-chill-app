{"ast":null,"code":"import _regeneratorRuntime from\"/Users/hellentrinh/Desktop/flick-and-chill/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/hellentrinh/Desktop/flick-and-chill/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/hellentrinh/Desktop/flick-and-chill/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import{useParams}from'react-router';import tmdbApi from'../../api/tmdbApi';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var VideoList=function VideoList(props){var _useParams=useParams(),category=_useParams.category;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),videos=_useState2[0],setVideos=_useState2[1];useEffect(function(){var getVideos=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return tmdbApi.getVideos(category,props.id);case 2:res=_context.sent;setVideos(res.results.slice(0,5));case 4:case\"end\":return _context.stop();}}},_callee);}));return function getVideos(){return _ref.apply(this,arguments);};}();getVideos();},[category,props.id]);return/*#__PURE__*/_jsx(_Fragment,{children:videos.map(function(item,i){return/*#__PURE__*/_jsx(Video,{item:item},i);})});};var Video=function Video(props){var item=props.item;var iframeRef=useRef(null);useEffect(function(){var height=iframeRef.current.offsetWidth*9/16+'px';iframeRef.current.setAttribute('height',height);},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"video\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"video__title\",children:/*#__PURE__*/_jsx(\"h2\",{children:item.name})}),/*#__PURE__*/_jsx(\"iframe\",{src:\"https://www.youtube.com/embed/\".concat(item.key),ref:iframeRef,width:\"100%\",title:\"video\"})]});};export default VideoList;","map":{"version":3,"sources":["/Users/hellentrinh/Desktop/flick-and-chill/src/pages/detail/VideoList.jsx"],"names":["React","useState","useEffect","useRef","useParams","tmdbApi","VideoList","props","category","videos","setVideos","getVideos","id","res","results","slice","map","item","i","Video","iframeRef","height","current","offsetWidth","setAttribute","name","key"],"mappings":"geAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,CAEA,OAASC,SAAT,KAA0B,cAA1B,CAEA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,C,6IAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,KAAK,CAAI,CAEvB,eAAmBH,SAAS,EAA5B,CAAOI,QAAP,YAAOA,QAAP,CAEA,cAA4BP,QAAQ,CAAC,EAAD,CAApC,wCAAOQ,MAAP,eAAeC,SAAf,eAEAR,SAAS,CAAC,UAAM,CACZ,GAAMS,CAAAA,SAAS,0FAAG,iKACIN,CAAAA,OAAO,CAACM,SAAR,CAAkBH,QAAlB,CAA4BD,KAAK,CAACK,EAAlC,CADJ,QACRC,GADQ,eAEdH,SAAS,CAACG,GAAG,CAACC,OAAJ,CAAYC,KAAZ,CAAkB,CAAlB,CAAqB,CAArB,CAAD,CAAT,CAFc,sDAAH,kBAATJ,CAAAA,SAAS,0CAAf,CAIAA,SAAS,GACZ,CANQ,CAMN,CAACH,QAAD,CAAWD,KAAK,CAACK,EAAjB,CANM,CAAT,CAQA,mBACI,yBAEQH,MAAM,CAACO,GAAP,CAAW,SAACC,IAAD,CAAOC,CAAP,qBACP,KAAC,KAAD,EAAe,IAAI,CAAED,IAArB,EAAYC,CAAZ,CADO,EAAX,CAFR,EADJ,CASH,CAvBD,CAyBA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAZ,KAAK,CAAI,CAEnB,GAAMU,CAAAA,IAAI,CAAGV,KAAK,CAACU,IAAnB,CAEA,GAAMG,CAAAA,SAAS,CAAGjB,MAAM,CAAC,IAAD,CAAxB,CAEAD,SAAS,CAAC,UAAM,CACZ,GAAMmB,CAAAA,MAAM,CAAGD,SAAS,CAACE,OAAV,CAAkBC,WAAlB,CAAgC,CAAhC,CAAoC,EAApC,CAAyC,IAAxD,CACAH,SAAS,CAACE,OAAV,CAAkBE,YAAlB,CAA+B,QAA/B,CAAyCH,MAAzC,EACH,CAHQ,CAGN,EAHM,CAAT,CAKA,mBACI,aAAK,SAAS,CAAC,OAAf,wBACI,YAAK,SAAS,CAAC,cAAf,uBACI,oBAAKJ,IAAI,CAACQ,IAAV,EADJ,EADJ,cAII,eACI,GAAG,yCAAmCR,IAAI,CAACS,GAAxC,CADP,CAEI,GAAG,CAAEN,SAFT,CAGI,KAAK,CAAC,MAHV,CAII,KAAK,CAAC,OAJV,EAJJ,GADJ,CAaH,CAxBD,CA0BA,cAAed,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nimport { useParams } from 'react-router';\n\nimport tmdbApi from '../../api/tmdbApi';\n\nconst VideoList = props => {\n\n    const {category} = useParams();\n\n    const [videos, setVideos] = useState([]);\n\n    useEffect(() => {\n        const getVideos = async () => {\n            const res = await tmdbApi.getVideos(category, props.id);\n            setVideos(res.results.slice(0, 5));\n        }\n        getVideos();\n    }, [category, props.id]);\n\n    return (\n        <>\n            {\n                videos.map((item, i) => (\n                    <Video key={i} item={item}/>\n                ))\n            }\n        </>\n    );\n}\n\nconst Video = props => {\n\n    const item = props.item;\n\n    const iframeRef = useRef(null);\n\n    useEffect(() => {\n        const height = iframeRef.current.offsetWidth * 9 / 16 + 'px';\n        iframeRef.current.setAttribute('height', height);\n    }, []);\n\n    return (\n        <div className=\"video\">\n            <div className=\"video__title\">\n                <h2>{item.name}</h2>\n            </div>\n            <iframe\n                src={`https://www.youtube.com/embed/${item.key}`}\n                ref={iframeRef}\n                width=\"100%\"\n                title=\"video\"\n            ></iframe>\n        </div>\n    )\n}\n\nexport default VideoList;\n"]},"metadata":{},"sourceType":"module"}
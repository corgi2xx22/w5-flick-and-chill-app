{"ast":null,"code":"var _jsxFileName = \"/Users/hellentrinh/Desktop/github-movie-app/tutorial/react-movie/src/components/modal/Modal.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './modal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = props => {\n  _s();\n\n  const [active, setActive] = useState(false);\n  useEffect(() => {\n    setActive(props.active);\n  }, [props.active]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: props.id,\n    className: `modal ${active ? 'active' : ''}`,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Modal, \"bmG2JTygrN+PZT3BxK5E30OQ5KE=\");\n\n_c = Modal;\nModal.propTypes = {\n  active: PropTypes.bool,\n  id: PropTypes.string\n};\nexport const ModalContent = props => {\n  _s2();\n\n  const contentRef = useRef(null);\n\n  const closeModal = () => {\n    contentRef.current.parentNode.classList.remove('active');\n    if (props.onClose) props.onClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: contentRef,\n    className: \"modal__content\",\n    children: [props.children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal__content__close\",\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bx bx-x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(ModalContent, \"76RymMQDwORkpkOdsElhIIY+DNc=\");\n\n_c2 = ModalContent;\nModalContent.propTypes = {\n  onClose: PropTypes.func\n};\nexport default Modal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"ModalContent\");","map":{"version":3,"sources":["/Users/hellentrinh/Desktop/github-movie-app/tutorial/react-movie/src/components/modal/Modal.jsx"],"names":["React","useState","useEffect","useRef","PropTypes","Modal","props","active","setActive","id","children","propTypes","bool","string","ModalContent","contentRef","closeModal","current","parentNode","classList","remove","onClose","func"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,cAAP;;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA;;AAEnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,SAAS,CAACF,KAAK,CAACC,MAAP,CAAT;AACH,GAFQ,EAEN,CAACD,KAAK,CAACC,MAAP,CAFM,CAAT;AAIA,sBACI;AAAK,IAAA,EAAE,EAAED,KAAK,CAACG,EAAf;AAAmB,IAAA,SAAS,EAAG,SAAQF,MAAM,GAAG,QAAH,GAAc,EAAG,EAA9D;AAAA,cACKD,KAAK,CAACI;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAbD;;GAAML,K;;KAAAA,K;AAeNA,KAAK,CAACM,SAAN,GAAkB;AACdJ,EAAAA,MAAM,EAAEH,SAAS,CAACQ,IADJ;AAEdH,EAAAA,EAAE,EAAEL,SAAS,CAACS;AAFA,CAAlB;AAKA,OAAO,MAAMC,YAAY,GAAGR,KAAK,IAAI;AAAA;;AAEjC,QAAMS,UAAU,GAAGZ,MAAM,CAAC,IAAD,CAAzB;;AAEA,QAAMa,UAAU,GAAG,MAAM;AACrBD,IAAAA,UAAU,CAACE,OAAX,CAAmBC,UAAnB,CAA8BC,SAA9B,CAAwCC,MAAxC,CAA+C,QAA/C;AACA,QAAId,KAAK,CAACe,OAAV,EAAmBf,KAAK,CAACe,OAAN;AACtB,GAHD;;AAKA,sBACI;AAAK,IAAA,GAAG,EAAEN,UAAV;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAA,eACKT,KAAK,CAACI,QADX,eAEI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAuC,MAAA,OAAO,EAAEM,UAAhD;AAAA,6BACI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAjBM;;IAAMF,Y;;MAAAA,Y;AAmBbA,YAAY,CAACH,SAAb,GAAyB;AACrBU,EAAAA,OAAO,EAAEjB,SAAS,CAACkB;AADE,CAAzB;AAIA,eAAejB,KAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './modal.scss';\n\nconst Modal = props => {\n\n    const [active, setActive] = useState(false);\n\n    useEffect(() => {\n        setActive(props.active);\n    }, [props.active]);\n\n    return (\n        <div id={props.id} className={`modal ${active ? 'active' : ''}`}>\n            {props.children}\n        </div>\n    );\n}\n\nModal.propTypes = {\n    active: PropTypes.bool,\n    id: PropTypes.string\n}\n\nexport const ModalContent = props => {\n\n    const contentRef = useRef(null);\n\n    const closeModal = () => {\n        contentRef.current.parentNode.classList.remove('active');\n        if (props.onClose) props.onClose();\n    }\n\n    return (\n        <div ref={contentRef} className=\"modal__content\">\n            {props.children}\n            <div className=\"modal__content__close\" onClick={closeModal}>\n                <i className=\"bx bx-x\"></i>\n            </div>\n        </div>\n    )\n}\n\nModalContent.propTypes = {\n    onClose: PropTypes.func\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}
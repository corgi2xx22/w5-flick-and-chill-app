{"ast":null,"code":"import _regeneratorRuntime from\"/Users/hellentrinh/Desktop/flick-and-chill/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/hellentrinh/Desktop/flick-and-chill/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/hellentrinh/Desktop/flick-and-chill/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./movie-list.scss';import{SwiperSlide,Swiper}from'swiper/react';import{Link}from'react-router-dom';import Button from'../button/Button';import tmdbApi,{category}from'../../api/tmdbApi';import apiConfig from'../../api/apiConfig';import MovieCard from'../movie-card/MovieCard';import{jsx as _jsx}from\"react/jsx-runtime\";var MovieList=function MovieList(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),items=_useState2[0],setItems=_useState2[1];useEffect(function(){var getList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,params;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:response=null;params={};if(!(props.type!=='similar')){_context.next=15;break;}_context.t0=props.category;_context.next=_context.t0===category.movie?6:10;break;case 6:_context.next=8;return tmdbApi.getMoviesList(props.type,{params:params});case 8:response=_context.sent;return _context.abrupt(\"break\",13);case 10:_context.next=12;return tmdbApi.getTvList(props.type,{params:params});case 12:response=_context.sent;case 13:_context.next=18;break;case 15:_context.next=17;return tmdbApi.similar(props.category,props.id);case 17:response=_context.sent;case 18:setItems(response.results);case 19:case\"end\":return _context.stop();}}},_callee);}));return function getList(){return _ref.apply(this,arguments);};}();getList();},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"movie-list\",children:/*#__PURE__*/_jsx(Swiper,{grabCursor:true,spaceBetween:10,slidesPerView:'auto',children:items.map(function(item,i){return/*#__PURE__*/_jsx(SwiperSlide,{children:/*#__PURE__*/_jsx(MovieCard,{item:item,category:props.category})},i);})})});};export default MovieList;","map":{"version":3,"sources":["/Users/hellentrinh/Desktop/flick-and-chill/src/components/movie-list/MovieList.jsx"],"names":["React","useState","useEffect","SwiperSlide","Swiper","Link","Button","tmdbApi","category","apiConfig","MovieCard","MovieList","props","items","setItems","getList","response","params","type","movie","getMoviesList","getTvList","similar","id","results","map","item","i"],"mappings":"geAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAGA,MAAO,mBAAP,CAEA,OAASC,WAAT,CAAsBC,MAAtB,KAAoC,cAApC,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CAEA,MAAOC,CAAAA,OAAP,EAAkBC,QAAlB,KAAkC,mBAAlC,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,C,2CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,KAAK,CAAI,CAEvB,cAA0BX,QAAQ,CAAC,EAAD,CAAlC,wCAAOY,KAAP,eAAcC,QAAd,eAEAZ,SAAS,CAAC,UAAM,CACZ,GAAMa,CAAAA,OAAO,0FAAG,uJACRC,QADQ,CACG,IADH,CAENC,MAFM,CAEG,EAFH,MAIRL,KAAK,CAACM,IAAN,GAAe,SAJP,uCAKDN,KAAK,CAACJ,QALL,6BAMCA,QAAQ,CAACW,KANV,yCAOiBZ,CAAAA,OAAO,CAACa,aAAR,CAAsBR,KAAK,CAACM,IAA5B,CAAkC,CAACD,MAAM,CAANA,MAAD,CAAlC,CAPjB,QAOAD,QAPA,iFAUiBT,CAAAA,OAAO,CAACc,SAAR,CAAkBT,KAAK,CAACM,IAAxB,CAA8B,CAACD,MAAM,CAANA,MAAD,CAA9B,CAVjB,SAUAD,QAVA,6EAaST,CAAAA,OAAO,CAACe,OAAR,CAAgBV,KAAK,CAACJ,QAAtB,CAAgCI,KAAK,CAACW,EAAtC,CAbT,SAaRP,QAbQ,uBAeZF,QAAQ,CAACE,QAAQ,CAACQ,OAAV,CAAR,CAfY,uDAAH,kBAAPT,CAAAA,OAAO,0CAAb,CAiBAA,OAAO,GACV,CAnBQ,CAmBN,EAnBM,CAAT,CAqBA,mBACI,YAAK,SAAS,CAAC,YAAf,uBACI,KAAC,MAAD,EACI,UAAU,CAAE,IADhB,CAEI,YAAY,CAAE,EAFlB,CAGI,aAAa,CAAE,MAHnB,UAMQF,KAAK,CAACY,GAAN,CAAU,SAACC,IAAD,CAAOC,CAAP,qBACN,KAAC,WAAD,wBACI,KAAC,SAAD,EAAW,IAAI,CAAED,IAAjB,CAAuB,QAAQ,CAAEd,KAAK,CAACJ,QAAvC,EADJ,EAAkBmB,CAAlB,CADM,EAAV,CANR,EADJ,EADJ,CAiBH,CA1CD,CAiDA,cAAehB,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './movie-list.scss';\n\nimport { SwiperSlide, Swiper } from 'swiper/react';\nimport { Link } from 'react-router-dom';\n\nimport Button from '../button/Button';\n\nimport tmdbApi, { category } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport MovieCard from '../movie-card/MovieCard';\n\nconst MovieList = props => {\n\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        const getList = async () => {\n            let response = null;\n            const params = {};\n\n            if (props.type !== 'similar') {\n                switch(props.category) {\n                    case category.movie:\n                        response = await tmdbApi.getMoviesList(props.type, {params});\n                        break;\n                    default:\n                        response = await tmdbApi.getTvList(props.type, {params});\n                }\n            } else {\n                response = await tmdbApi.similar(props.category, props.id);\n            }\n            setItems(response.results);\n        }\n        getList();\n    }, []);\n\n    return (\n        <div className=\"movie-list\">\n            <Swiper\n                grabCursor={true}\n                spaceBetween={10}\n                slidesPerView={'auto'}\n            >\n                {\n                    items.map((item, i) => (\n                        <SwiperSlide key={i}>\n                            <MovieCard item={item} category={props.category}/>\n                        </SwiperSlide>\n                    ))\n                }\n            </Swiper>\n        </div>\n    );\n}\n\nMovieList.propTypes = {\n    category: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired\n}\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}